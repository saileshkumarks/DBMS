-- (1) Write a view s16_h7a so it can be used in the following manner.

CREATE OR REPLACE VIEW s16_h7a AS
SELECT A.ACTOR_ID, B.NAME AS CATEGORY_NAME, C.TITLE AS FILM_TITLE
FROM ACTOR A, CATEGORY B, FILM C, FILM_ACTOR D, FILM_CATEGORY E
WHERE A.ACTOR_ID = D.ACTOR_ID
AND C.FILM_ID = D.FILM_ID
AND C.FILM_ID = E.FILM_ID
AND B.CATEGORY_ID = E.CATEGORY_ID
ORDER BY 3 ASC;

-- COUNT = 22
SELECT *
FROM s16_h7a A
WHERE A.ACTOR_ID = 10;

-- (2) Use the view s16_h7a to write the SQL statement to generate the following.
-- Note that only results of actor-category with three or less films are shown in the specific format below
-- COUNT = 2328
SELECT A.ACTOR_ID, 
  A.CATEGORY_NAME, 
  CONCAT('(', COUNT(A.FILM_TITLE), '): ', REPLACE(GROUP_CONCAT(DISTINCT A.FILM_TITLE ORDER BY A.FILM_TITLE), ',', ', ')) AS FILMS  
FROM s16_h7a A
GROUP BY A.ACTOR_ID, A.CATEGORY_NAME
HAVING COUNT(A.FILM_TITLE) <= 3
ORDER BY 1, 2, 3 ASC;

-- (3) Write a function to return the dot product of the category film count vectors of two actors.:
DROP FUNCTION S16_H7C;
DELIMITER //

CREATE FUNCTION S16_H7C(ACTORID_1 INT, ACTORID_2 INT) RETURNS INT
READS SQL DATA
BEGIN
   DECLARE RESULT1 INTEGER DEFAULT 0;
   
   SELECT SUM(X.CATEGORY * Y.CATEGORY) INTO RESULT1 FROM
    (SELECT A.ACTOR_ID, D.CATEGORY_ID, COUNT(C.TITLE) AS CATEGORY 
    FROM FILM_ACTOR A, FILM_CATEGORY B, FILM C, CATEGORY D
    WHERE A.FILM_ID = C.FILM_ID
    AND B.FILM_ID=C.FILM_ID 
    AND B.CATEGORY_ID = D.CATEGORY_ID 
    AND A.ACTOR_ID = ACTORID_1
    GROUP BY A.ACTOR_ID, D.CATEGORY_ID) X
   JOIN 
    (SELECT A.ACTOR_ID, D.CATEGORY_ID, COUNT(C.TITLE) AS CATEGORY 
    FROM FILM_ACTOR A, FILM_CATEGORY B, FILM C, CATEGORY D
    WHERE A.FILM_ID = C.FILM_ID
    AND B.FILM_ID = C.FILM_ID 
    AND B.CATEGORY_ID = D.CATEGORY_ID 
    AND A.ACTOR_ID = ACTORID_2
    GROUP BY A.ACTOR_ID, D.CATEGORY_ID) Y
   WHERE X.CATEGORY_ID=Y.CATEGORY_ID;

   RETURN RESULT1;
END //

DELIMITER ;

-- (4) Write a function s16_h7d to return the cosine similarity of the category vectors of two actors.
DROP FUNCTION S16_H7D;
DELIMITER //

CREATE FUNCTION S16_H7D (ACTORID_1 INT, ACTORID_2 INT) RETURNS FLOAT
READS SQL DATA
BEGIN
   DECLARE RESULT2 FLOAT DEFAULT 0;
   DECLARE SQL1 INTEGER DEFAULT 0;
   DECLARE DENOMINATOR1 INTEGER DEFAULT 0;
   DECLARE DENOMINATOR2 INTEGER DEFAULT 0;  
   
  SET SQL1 = (SELECT S16_H7C(ACTORID_1,ACTORID_2));
  
  SET DENOMINATOR1 = 
    (SELECT SUM(X.SQUARE) 
    FROM 
      (SELECT A.ACTOR_ID, D.CATEGORY_ID, COUNT(C.TITLE) AS CATEGORY , (COUNT(C.TITLE)*COUNT(C.TITLE)) AS SQUARE 
      FROM FILM_ACTOR A, FILM_CATEGORY B, FILM C, CATEGORY D
      WHERE A.FILM_ID = C.FILM_ID
      AND B.FILM_ID = C.FILM_ID 
      AND B.CATEGORY_ID = D.CATEGORY_ID 
      AND A.ACTOR_ID = ACTORID_1
      GROUP BY A.ACTOR_ID, D.CATEGORY_ID) AS X);
  
  SET DENOMINATOR2 = 
    (SELECT SUM(Y.SQUARE) 
    FROM 
      (SELECT A.ACTOR_ID, D.CATEGORY_ID, COUNT(C.TITLE) AS CATEGORY , (COUNT(C.TITLE)*COUNT(C.TITLE)) AS SQUARE 
      FROM FILM_ACTOR A, FILM_CATEGORY B, FILM C, CATEGORY D
      WHERE A.FILM_ID = C.FILM_ID
      AND B.FILM_ID = C.FILM_ID 
      AND B.CATEGORY_ID = D.CATEGORY_ID 
      AND A.ACTOR_ID = ACTORID_2
      GROUP BY A.ACTOR_ID, D.CATEGORY_ID) AS Y);

  SET RESULT2 = SQL1/(SQRT(DENOMINATOR1)*SQRT(DENOMINATOR2));

   RETURN RESULT2;
END //

DELIMITER ;